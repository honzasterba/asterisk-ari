#------------------------------------------------------------------------------
#
#  WARNING !
#
#  This is a generated file. DO NOT EDIT THIS FILE! Your changes will
#  be lost the next time this file is regenerated.
#
#  This file was generated using asterisk-ari-client ruby gem.
#
#------------------------------------------------------------------------------

module Ari
  class Sound < Resource

    attr_reader :id, :text, :formats

    def formats=(val)
      @formats ||= val.map { |v| FormatLangPair.new(v) }
    end


    # GET /sounds
    #
    # Sounds
    #
    #
    # Parameters:
    #
    # lang  - Lookup sound for a specific language.
    # format  - Lookup sound in a specific format.
    #
    def self.list(options = {})
      path = '/sounds'
      response = client(options).get(path, options)
      response.map { |hash| Sound.new(hash.merge(client: options[:client])) }
    end

    # GET /sounds/%{soundId}
    #
    # Individual sound
    #
    #
    # Parameters:
    #
    # soundId (required) - Sound's id
    #
    def self.get(options = {})
      raise ArgumentError.new("Parameter soundId must be passed in options hash.") unless options[:soundId]
      path = '/sounds/%{soundId}' % options
      response = client(options).get(path, options)
      Sound.new(response.merge(client: options[:client]))
    end

    def get(options = {})
      self.class.get(options.merge(soundId: self.id, client: @client))
    end

  end
end

Ari::Client.send :define_method, 'sounds' do
  Ari::ListResource.new(self, Ari::Sound)
end
